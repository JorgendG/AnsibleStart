---
- name: Ensure the required NuGet package provider is installed
  win_packageprovider:
    name: NuGet

- name: Install required PowerShell modules
  win_psmodule:
    name: "{{ item }}"
    state: present
    accept_license: true
    skip_publisher_check: true
  retries: 5
  delay: 30
  loop:
    - PowerShellGet
    - PackageManagement
    - DnsServerDsc

- name: Set static ipaddress
  win_set_ip:
    ipaddress: domain["{{inventory_hostname}}"].ipaddress
    ipsubnet: domain["{{inventory_hostname}}"].ipsubnet
    gateway: domain["{{inventory_hostname}}"].gateway
  async: 100 # Using "fire-and-forget" asynchronous execution for this task, otherwise it will always fail and timeout
  poll: 0
  register: setip

- name: Wait for the hosts network interface to come back up
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    port: 5985
    delay: 10
    state: started
  register: wait_result
  when: setip.changed

- name: Set DNS to primary domain controller
  win_dns_client:
      adapter_names: Ethernet
      ipv4_addresses:
        - "{{domain.dc22.ipaddress}}"
        - "{{domain.dc23.ipaddress}}"

- name: Install Active Directory
  win_feature:
    name: AD-Domain-Services
    state: present
    include_sub_features: true
    include_management_tools: true
  register: result

- name: Create Domain
  win_domain:
    dns_domain_name: "{{ domain.dns_domain_name }}"
    safe_mode_password: "{{ ansible_password }}"
  

- name: Promote server as a domain controller
  ansible.windows.win_domain_controller:
    dns_domain_name: "{{ domain.dns_domain_name }}"
    domain_admin_user: "{{ domain.domain_admin }}"
    domain_admin_password: "{{ ansible_password }}"
    safe_mode_password: "{{ ansible_password }}"
    state: domain_controller
  register: ad

- name: Reboot
  win_reboot:
  when: ad.changed

